name: Deploy the CDK Infrastructure and Build the Catalyst Service Images

on:
  push:
    branches:
        - master

jobs:
  run-cicd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install the CDK Dependency
        run: |
          npm install -g aws-cdk
      # Install Diagrid CLI
      - name: Install Diagrid CLI
        run: |
          # Download the latest Diagrid CLI from GitHub or direct source
          curl -o- https://downloads.diagrid.io/cli/install.sh | bash
          sudo mv ./diagrid /usr/local/bin
      # Test Diagrid command
      - name: Run Diagrid Version Command
        run: |
          diagrid -h
      - name: Install other dependencies
        run: |
          npm install
        working-directory: ./cdk-infrastructure
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-2"
      - name: Synthesize CDK Stack
        run: cdk synth
        working-directory: ./cdk-infrastructure
      - name: Bootstrap CDK Stack
        run: cdk bootstrap
        working-directory: ./cdk-infrastructure

      - name: Deploy PackageDeliverRepositoryStack to AWS
        run: cdk deploy PackageDeliverRepositoryStack --require-approval=never
        working-directory: ./cdk-infrastructure

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        run: |
          for service in ./services/*/ ; do
            service_name=$(basename "$service")
            ecr_repo="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/$service_name"
            echo "Building Docker image for $service_name"
            docker build -t "$ecr_repo:latest" "$service"
            echo "Pushing Docker image to ECR for $service_name"
            docker push "$ecr_repo:latest"
          done


      - name: Deploy cdk-infrastructure to AWS
        run: cdk deploy PackageDeliveryMicroserviceStack --require-approval=never
        working-directory: ./cdk-infrastructure

      - name: Update Cluster to get the most recent image
        run: |
          for service in ./services/*/ ; do
            service_name=$(basename "$service")
            aws ecs update-service --cluster PACKAGE-DELIVERY-MICROSERVICE-cluster --service $service_name --force-new-deployment
          done


      - name: Retrieving the DNS for the services and updating the appIDs
        run: |
          for service in ./services/*/ ; do
            alb_name=$(basename "$service")-ALB
            alb_dns=$(aws elbv2 describe-load-balancers --names $alb_name --query "LoadBalancers[0].DNSName" --output text)
            if [ -z "$alb_dns" ]; then
              echo "ALB DNS not found for $service"
              exit 1
            fi
            echo "ALB DNS: $alb_dns"
            # Update Diagrid App ID with the ALB DNS and other required parameters
            diagrid appid update user-service  --app-endpoint "http://user-service-ALB-835517443.us-east-2.elb.amazonaws.com"  --api-key "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc0FwaUtleSI6dHJ1ZSwiaHR0cHM6Ly9kaWFncmlkLmlvL29yZ0lkIjoiYTY1N2NiMTUtOWFhNi00YmZkLWIzYzYtNjFlNzZhMTczY2ZiIiwiaHR0cHM6Ly9kaWFncmlkLmlvL2VtYWlsIjoidHJleXJvc2l1c0BnbWFpbC5jb20iLCJodHRwczovL2RpYWdyaWQuaW8vb3JnX2E2NTdjYjE1LTlhYTYtNGJmZC1iM2M2LTYxZTc2YTE3M2NmYi9yb2xlcyI6WyJjcmEuZGlhZ3JpZDphZG1pbiJdLCJpYXQiOjE3MjU1NjM5MzUsImF1ZCI6InVybjphZG1pbmdyaWQiLCJpc3MiOiJkaWFncmlkLmlvIiwic3ViIjoidHJleSIsImp0aSI6ImMwamc4ZTJ0bmVmbWZmMG9yeTI4cGwifQ.TL552N1u3IJHKbA_DN6_YuqE0VY6szLCna635GlgIZU" --project kv-project-fbe8f200-4
          
          done

          
